# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Resolver\RequestDTOResolver:
        arguments:
            - '@validator'
        tags:
            - { name: controller.request_value_resolver, priority: 50 }

    App\EventListener\RequestTransformerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }

# Внедрение зависимости метод-сеттера
#    App\Repository\QuestionAnswerRepository:
#        calls:
#            - [setSerializer, ['@jms_serializer']]
# Внедрение зависимости с помощью свойства
#    App\Repository\QuestionAnswerRepository:
#        class: App\Repository\QuestionAnswerRepository
#        properties:
#            jmsSerializer: '@jms_serializer'

# Кастомный парам ковертор, сейчас он подключается автоматически, потому как все сервисы публичны
#    app.request.param_converter.qa_request:
#        class: App\ParamConverter\QARequestParamConverter
#        autowire: true
#        tags:
#            - { name: request.param_converter, priority: -2, converter: app.request.param_converter.qa_request }
